# common          --experimental_platform_in_output_dir
common          --enable_platform_specific_config

# common          --repo_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1
common          --incompatible_strict_action_env

# build           --dynamic_mode=off
# build           --force_pic
# build           --features=thin_lto
# ThinLTO feature doesn't exist in Zig toolchain, so we must set the flags manually.
# It also doesn't support LTO on darwin targets, so we can't set this globally.
# Instead, we configure copt/linkopt inside the toolchain itself (with a WORKSPACE patch).
#common --copt -flto=thin

# TODO(zbarsky): This doesn't compile due to "zlib.h" vs <zlib.h> usage.
common --@llvm_zlib//:llvm_enable_zlib=false

# Compilation Flags
build           -c opt
build           --strip=always
build           --copt=-ffunction-sections
build           --copt=-fdata-sections
build:macos     --linkopt=-Wl,-dead_strip

# hermetic_cc_toolchain registers strip as /usr/bin/false
build:macos     --stripopt=-rSTx

# apple strip strips in place without removing the symbol section
build:macos     --linkopt=-Wl,-no_exported_symbols

# build           --stripopt=--strip-all

build:macos     --sandbox_add_mount_pair=/var/tmp
build:linux     --sandbox_add_mount_pair=/tmp

build:docker-sandbox --experimental_docker_image=ed1544e454989078f5dec1bfdabd8c5cc9c48e0705d07b678ab6ae3fb61952d2
build:docker-sandbox --spawn_strategy=docker --strategy=Javac=docker --genrule_strategy=docker
build:docker-sandbox --define=EXECUTOR=remote
build:docker-sandbox --experimental_docker_verbose
build:docker-sandbox --experimental_enable_docker_sandbox

common --override_repository=+_repo_rules2+zig-srcs=zig-0.14.0
