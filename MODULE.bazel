module(
    name = "cc-toolchain",
    version = "0.0.1",
)

bazel_dep(name = "aspect_bazel_lib", version = "2.14.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.11")

RULES_CC_COMMIT = "bbc0814aa22f1748c60722ad8972d16812eb206d" # HEAD
bazel_dep(name = "rules_cc", version = "0.1.1")
archive_override(
    module_name = "rules_cc",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/%s.tar.gz" % RULES_CC_COMMIT],
    integrity = "sha256-f/9TYhNs+hvmZ3cH7RvDdZFFTOk2a6DBSZZRfdb50rk=",
    strip_prefix = "rules_cc-%s" % RULES_CC_COMMIT,
)

bazel_dep(name = "with_cfg.bzl", version = "0.9.2")

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")    

http_archive(
    name = "llvm-toolchain-minimal-20.1.1-darwin-arm64",
    urls = ["https://github.com/cerisier/toolchains_cc/releases/download/bootstrap%2Fllvm%2F20.1.1/llvm-toolchain-minimal-20.1.1-darwin-arm64.tar.zst"],
    sha256 = "764e9f22f6b8da92ff6325f63e9e8a3fb219cdbb04a5e7fd6614967812616b05",
    build_file = "//toolchain/llvm:BUILD.llvm_release.tpl",
)
http_archive(
    name = "static-extras-toolchain-artifacts-darwin-arm64",
    urls = ["https://github.com/cerisier/static-toolchains-artifacts/releases/download/0.0.2/static-extras-toolchain-artifacts-darwin-arm64.tar.zst"],
    sha256 = "32b832ea8b3f72707460068b2703c4672ce17bbc21d549bba2eee25acdaf1420",
    build_file = "//bootstrap/extras:BUILD.extras.tpl",
)

http_archive(
    name = "llvm-toolchain-minimal-20.1.1-linux-amd64",
    urls = ["https://github.com/cerisier/toolchains_cc/releases/download/bootstrap%2Fllvm%2F20.1.1/llvm-toolchain-minimal-20.1.1-linux-amd64-musl.tar.zst"],
    sha256 = "101fedb574389842a76ee714f530e46a7ee17b77b9f5ce1589a441e921af4c03",
    build_file = "//toolchain/llvm:BUILD.llvm_release.tpl",
)
http_archive(
    name = "static-extras-toolchain-artifacts-linux-amd64",
    urls = ["https://github.com/cerisier/static-toolchains-artifacts/releases/download/0.0.2/static-extras-toolchain-artifacts-linux-amd64-musl.tar.zst"],
    sha256 = "813a43c93101e6bbd3b9e7620f6445d03034e774523b00752934fb87b42a2796",
    build_file = "//bootstrap/extras:BUILD.extras.tpl",
)

http_archive(
    name = "llvm-toolchain-minimal-20.1.1-linux-arm64",
    urls = ["https://github.com/cerisier/toolchains_cc/releases/download/bootstrap%2Fllvm%2F20.1.1/llvm-toolchain-minimal-20.1.1-linux-arm64-musl.tar.zst"],
    sha256 = "f1ec58d1c479abeedab5f5ca5be4081781c4c68fb8a4603b5d94d55512a7c9bd",
    build_file = "//toolchain/llvm:BUILD.llvm_release.tpl",
)
http_archive(
    name = "static-extras-toolchain-artifacts-linux-arm64",
    urls = ["https://github.com/cerisier/static-toolchains-artifacts/releases/download/0.0.2/static-extras-toolchain-artifacts-linux-arm64-musl.tar.zst"],
    sha256 = "42acf797d6929b22e6e62de8924b1fc1478c320d24a28db82fd38fd0cf0c12fe",
    build_file = "//bootstrap/extras:BUILD.extras.tpl",
)

http_archive(
    name = "zig-srcs",
    urls = ["https://github.com/ziglang/zig/archive/ddcf6fcdf3452a4a7d55a27e7112e794447120b6.tar.gz"],
    strip_prefix = "zig-ddcf6fcdf3452a4a7d55a27e7112e794447120b6",
    integrity = "sha256-sYdt1inP/EQX/kYjlpelnAK+iVaGT6MDbvynHKUDd7g=",
    build_file = "//third_party/ziglang/zig:BUILD.tpl",
)

http_archive(
    name = "musl_libc",
    urls = ["https://musl.libc.org/releases/musl-1.2.5.tar.gz"],
    strip_prefix = "musl-1.2.5",
    integrity = "sha256-qaEYu+hNh2TaDqDSizqz+uhHf8fkCF2QECuFlvx8deQ=",
    build_file = "//third_party/libc/musl:BUILD.tpl",
)

http_archive(
    name = "compiler-rt",
    urls = ["https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.1/compiler-rt-20.1.1.src.tar.xz"],
    strip_prefix = "compiler-rt-20.1.1.src",
    integrity = "sha256-xPdTEXzb/+Watd86rUknk+awKaJZGYyEO7C5yCxZ700=",
    build_file = "//third_party/llvm-project/20.1.1/compiler-rt:BUILD.tpl",
)

http_archive(
    name = "libcxx",
    urls = ["https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.1/libcxx-20.1.1.src.tar.xz"],
    strip_prefix = "libcxx-20.1.1.src",
    integrity = "sha256-7qF9qkWQ7AbGAntmxRgBWFrOvy76YP3rmLZOqkdvxR0=",
    build_file = "//third_party/llvm-project/20.1.1/libcxx:BUILD.tpl",
)

http_archive(
    name = "libcxxabi",
    urls = ["https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.1/libcxxabi-20.1.1.src.tar.xz"],
    strip_prefix = "libcxxabi-20.1.1.src",
    integrity = "sha256-e7JAkLXRi6x7xv3MTAA7kb+ylo7wjuEghH3s1LypWvQ=",
    build_file = "//third_party/llvm-project/20.1.1/libcxxabi:BUILD.tpl",
)

http_archive(
    name = "libunwind",
    urls = ["https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.1/libunwind-20.1.1.src.tar.xz"],
    strip_prefix = "libunwind-20.1.1.src",
    integrity = "sha256-70H6vnDVWAsdtNDjky8DDMpEibUJn7mJ2X2RIfzByKc=",
    build_file = "//third_party/llvm-project/20.1.1/libunwind:BUILD.tpl",
)

http_pkg_archive = use_repo_rule("//:http_pkg_archive.bzl", "http_pkg_archive")
http_pkg_archive(
    name = "macosx15.4.sdk",
    urls = ["https://swcdn.apple.com/content/downloads/10/32/082-12052-A_AHPGDY76PT/1a419zaf3vh8o9t3c0usblyr8eystpnsh5/CLTools_macOSNMOS_SDK.pkg"],
    strip_files = [
        "Library/Developer/CommandLineTools/SDKs/MacOSX15.4.sdk/System/Library/Frameworks/Ruby.framework/Versions/Current/Headers/ruby",
    ],
    sha256 = "f8b0600aa4ad9b0b0b150fb62691dc561f47bc33ebc40546439f1460a0680913",
    build_file = "//third_party/macosx.sdk:BUILD.MacOSX15.4.sdk.tpl",
    strip_prefix = "Library/Developer/CommandLineTools/SDKs/MacOSX15.4.sdk",
)
# local_path_override(
#     module_name = "macosx15.4.sdk",
#     path = "_overrides/MacOSX15.4.sdk",
# )

## DEV DEPENDENCIES

bazel_dep(name = "hermetic_cc_toolchain", version = "4.0.0", dev_dependency = True)

GLIBC_STUBS_GENERATOR_COMMIT = "b8ef1c5f070b8297505a61d32ee9d6ca773d02b3"

bazel_dep(name = "glibc-stubs-generator", version = "2.0.1", dev_dependency = True)
archive_override(
    module_name = "glibc-stubs-generator",
    urls = ["https://github.com/cerisier/glibc-stubs-generator/archive/{}.tar.gz".format(GLIBC_STUBS_GENERATOR_COMMIT)],
    integrity = "sha256-ZctTSdI8zXZrC0f78a7g9WNt8Xi+sIAnBZBNrIf5avk=",
    strip_prefix = "glibc-stubs-generator-{}".format(GLIBC_STUBS_GENERATOR_COMMIT),
)

toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains", dev_dependency = True)
use_repo(toolchains, "zig_sdk")

non_module_deps = use_extension("//:non_module_deps.bzl", "non_module_deps", dev_dependency = True)
use_repo(non_module_deps, "llvm-raw", "llvm_zlib", "llvm_zstd", "vulkan_headers")

bazel_dep(name = "rules_python", version = "0.40.0", dev_dependency = True)
llvm_configure = use_repo_rule("@llvm-raw//utils/bazel:configure.bzl", "llvm_configure")
llvm_configure(name = "llvm-project")

## OVERRIDES PORTS FROM DEPENDENCIES 

RULES_ZIG_COMMIT = "b9739c615ce62b64ee595ac4bcd9ee7cc06b0422" # branch=zml

bazel_dep(name = "rules_zig", version = "20250314.0-b9739c6", dev_dependency = True)
archive_override(
    module_name = "rules_zig",
    urls = ["https://github.com/zml/rules_zig/archive/{}.tar.gz".format(RULES_ZIG_COMMIT)],
    integrity = "sha256-p1rYD9gvYS3DgBjN6jo1pB86Kr4k2wojKjVpYRTZ3Us=",
    strip_prefix = "rules_zig-{}".format(RULES_ZIG_COMMIT),
)

zig = use_extension("@rules_zig//zig:extensions.bzl", "zig", dev_dependency = True)
zig.index(file = "//:zig_index.json")
zig.toolchain(zig_version = "0.14.0")
zig.mirrors(urls = [
    "https://mirror.zml.ai/zig",
])
use_repo(zig, "zig_toolchains")

register_toolchains("@rules_zig//zig/target:all", dev_dependency = True)
register_toolchains("@zig_toolchains//:all", dev_dependency = True)


# setting them last 
register_toolchains(
    "//toolchain/stage2:stage2_toolchain",
    "//toolchain:xclang_toolchain",
)
