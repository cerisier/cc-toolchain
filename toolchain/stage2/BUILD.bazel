load("@rules_cc//cc/toolchains:toolchain.bzl", "cc_toolchain")
load("@rules_cc//cc/toolchains/impl:documented_api.bzl", "cc_args_list")
load("@platforms//host:constraints.bzl", "HOST_CONSTRAINTS")

constraint_setting(
    name = "bootstrap_stage",
    visibility = ["//visibility:public"],
)

constraint_value(
    name = "bootstrap_stage_2",
    constraint_setting = ":bootstrap_stage",
    visibility = ["//visibility:public"],
)

platform(
    name = "bootstrap_stage_2_platform",
    constraint_values = [
        ":bootstrap_stage_2",
    ],
    parents = ["@local_config_platform//:host"],
    visibility = ["//visibility:public"],
)

cc_args_list(
    name = "platform_specific_args",
    args = select({
        "@platforms//os:macos": [
            "//toolchain/args/macos:macos_minimum_os_flags",
            "//toolchain/args/macos:macos_default_link_flags",
            "//toolchain/args/macos:macos_sdk_sysroot",
            "//toolchain/args/macos:hermetic_macos_args_cpp",
        ],
        "@platforms//os:linux": [
            "//toolchain/args/linux:hermetic_linux_args",
        ],
        "//conditions:default": [],
    }),
)

cc_args_list(
    name = "optimization_flags",
    args = select({
        "//config:stage2_optimization_mode_debug": [
            "//toolchain/stage2/args:dbg_compile_flags",
        ],
        "//conditions:default": [
            "//toolchain/stage2/args:opt_compile_flags",
        ],
    }),
)

cc_toolchain(
    name = "stage2",
    args = [
        "//toolchain/args:llvm_target_for_platform",
        "//toolchain/stage2/args:default_compile_flags",
        "//toolchain/stage2/args:default_link_flags",
        ":platform_specific_args",
        ":optimization_flags",
    ],
    enabled_features = ["@rules_cc//cc/toolchains/args:experimental_replace_legacy_action_config_features"],
    known_features = ["@rules_cc//cc/toolchains/args:experimental_replace_legacy_action_config_features"],
    tool_map = "//toolchain/llvm:all_tools",
    compiler = "clang",
)

toolchain(
    name = "stage2_toolchain",
    toolchain = ":stage2",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
    exec_compatible_with = HOST_CONSTRAINTS + [
        "//toolchain/stage2:bootstrap_stage_2",
    ],
    visibility = ["//visibility:public"],
)
