load("@rules_cc//cc/toolchains:args.bzl", "cc_args")

# compile_actions minus assemble_actions (only preprocess_assemble)
OPT_FLAGS_COMPILE_ACTIONS = [
    "@rules_cc//cc/toolchains/actions:cpp_compile_actions",
    "@rules_cc//cc/toolchains/actions:c_compile_actions",
    "@rules_cc//cc/toolchains/actions:preprocess_assemble",
    "@rules_cc//cc/toolchains/actions:objc_compile",
    "@rules_cc//cc/toolchains/actions:objcpp_compile",
]

# libc must be compiled with optimizations (should match with above)
cc_args(
    name = "opt_compile_flags",
    # compile_actions minus assemble_actions (only preprocess_assemble)
    actions = OPT_FLAGS_COMPILE_ACTIONS,
    args =  [
        "-DNDEBUG",
        "-O2",
    ],
    visibility = ["//visibility:public"],
)

cc_args(
    name = "dbg_compile_flags",
    actions = OPT_FLAGS_COMPILE_ACTIONS,
    args = [
        "-D_DEBUG",
        "-O0",
        "-g",
    ],
    visibility = ["//visibility:public"],
)

cc_args(
    name = "default_compile_flags",
    actions = [
        "@rules_cc//cc/toolchains/actions:compile_actions",
    ],
    args = [
        "-no-canonical-prefixes",
        "-Wno-builtin-macro-redefined",
    ],
    visibility = ["//visibility:public"],
)

cc_args(
    name = "default_link_flags",
    actions = [
        "@rules_cc//cc/toolchains/actions:link_actions",
    ],
    args = [
        "-fuse-ld=lld",
        # "--ld-path={lld_path}",
    ],
    visibility = ["//visibility:public"],
)
