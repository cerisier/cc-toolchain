load("@rules_cc//cc/toolchains:args.bzl", "cc_args")
load("@rules_cc//cc/toolchains:feature.bzl", "cc_feature")
load("@rules_cc//cc/toolchains:feature_set.bzl", "cc_feature_set")

cc_args(
    name = "legacy_default_compile_flags",
    actions = [
        "@rules_cc//cc/toolchains/actions:compile_actions",
    ],
    args = [
        "-fstack-protector",
        # All warnings are enabled.
        "-Wall",
        # Enable a few more warnings that aren't part of -Wall.
        "-Wthread-safety",
        "-Wself-assign",
        # Disable problematic warnings.
        "-Wunused-but-set-parameter",
        # has false positives
        "-Wno-free-nonheap-object",
        # Enable coloring even if there's no attached terminal. Bazel removes the
        # escape sequences if --nocolor is specified.
        "-fcolor-diagnostics",
        # Keep stack frames for debugging, even in opt mode.
        "-fno-omit-frame-pointer",
    ],
)

cc_feature(
    name = "default_compile_flags",
    overrides = "@rules_cc//cc/toolchains/features/legacy:default_compile_flags",
    args = [
        ":legacy_default_compile_flags",
    ],
)

cc_args(
    name = "legacy_unfiltered_compile_flags",
    actions = [
        "@rules_cc//cc/toolchains/actions:compile_actions",
    ],
    args = [
        # Make C++ compilation deterministic. Use linkstamping instead of these
        # compiler symbols.
        "-no-canonical-prefixes",
        "-Wno-builtin-macro-redefined",
        "-D__DATE__=\\\"redacted\\\"",
        "-D__TIMESTAMP__=\\\"redacted\\\"",
        "-D__TIME__=\\\"redacted\\\"",
    ],
)

cc_feature(
    name = "unfiltered_compile_flags",
    overrides = "@rules_cc//cc/toolchains/features/legacy:unfiltered_compile_flags",
    args = [
        ":legacy_unfiltered_compile_flags",
    ],
)

###

cc_feature_set(
    name = "all_legacy_builtin_features",
    all_of = [
        ":default_compile_flags",
        ":unfiltered_compile_flags",
    ],
    visibility = ["//visibility:public"],
)
